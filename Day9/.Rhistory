knitr::opts_chunk$set(echo = TRUE)
library("tm")		 #processing texts and counting words
library("wordcloud") 	 #plotting a word cloud
library("RColorBrewer")
library("readxl")
# constants
myFile_products <- "products.csv"
myFile_reviews <- "reviews.csv"
myFile_authors <- "authors.csv"
# import data
setwd(getwd())
products <- read.csv(myFile_products)
products <- read.csv(myFile_products)
reviews <- read.csv(myFile_reviews)
authors <- read.csv(myFile_authors)
library("tm")		 #processing texts and counting words
library("wordcloud") 	 #plotting a word cloud
library("RColorBrewer")
library("readxl")
library(sqldf)
library(ggplot2)
library(gridExtra)
library(grid)
reviews$submission_date <- as.Date(reviews$submission_date, format = "%m/%d/%y")
reviews$ReviewDate <- format(reviews$submission_date, "%d")
reviews$ReviewMonthInt <- as.integer(format(reviews$submission_date, "%m"))
reviews$ReviewMonth <- format(reviews$submission_date, "%b")
reviews$ReviewYear <- format(reviews$submission_date, "%y")
reviewsByMonth <- sqldf("
SELECT ReviewMonth, ReviewMonthInt, COUNT(review_id) AS Reviews
FROM  reviews
WHERE ReviewYear BETWEEN 15 AND 22
GROUP BY ReviewMonth, ReviewMonthInt
ORDER BY ReviewMonthInt
")
barEx <- ggplot(data = reviewsByMonth, aes(x = reorder(ReviewMonth, ReviewMonthInt), y = Reviews)) +
geom_bar(stat = "identity") +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
hisEx <- ggplot(data = reviews, aes(rating)) +
geom_histogram(binwidth = .5) +
labs(title = "Luxury Brands Ratings Distribution", x = "Review Ratings (5 Stars)", y = "# of Reviews")
grid.arrange(hisEx, barEx, nrow=1, ncol=2)
# import data
setwd(getwd())
products <- read.csv(myFile_products)
reviews <- read.csv(myFile_reviews)
authors <- read.csv(myFile_authors)
reviews$submission_date <- as.Date(reviews$submission_date, format = "%m/%d/%y")
reviews$ReviewDate <- format(reviews$submission_date, "%d")
reviews$ReviewMonthInt <- as.integer(format(reviews$submission_date, "%m"))
reviews$ReviewMonth <- format(reviews$submission_date, "%b")
reviews$ReviewYear <- format(reviews$submission_date, "%y")
reviewsByMonth <- sqldf("
SELECT ReviewMonth, ReviewMonthInt, COUNT(review_id) AS Reviews
FROM  reviews
WHERE ReviewYear BETWEEN 15 AND 22
GROUP BY ReviewMonth, ReviewMonthInt
ORDER BY ReviewMonthInt
")
barEx <- ggplot(data = reviewsByMonth, aes(x = reorder(ReviewMonth, ReviewMonthInt), y = Reviews)) +
geom_bar(stat = "identity") +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
hisEx <- ggplot(data = reviews, aes(rating)) +
geom_histogram(binwidth = .5) +
labs(title = "Luxury Brands Ratings Distribution", x = "Review Ratings (5 Stars)", y = "# of Reviews")
grid.arrange(hisEx, barEx, nrow=1, ncol=2)
reviewsByMonth <- sqldf("
SELECT ReviewMonth, ReviewMonthInt, COUNT(review_id) AS Reviews
FROM  reviews
WHERE ReviewYear BETWEEN 15 AND 22
GROUP BY ReviewMonth, ReviewMonthInt
ORDER BY ReviewMonthInt
")
barEx <- ggplot(data = reviewsByMonth, aes(x = reorder(ReviewMonth, ReviewMonthInt), y = Reviews)) +
geom_bar(stat = "identity") +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
barEx
# don't show warnings while knitting
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(sqldf)
# constants
my_working_dir_mac <- "~/Desktop/MKTAnalytics/Data/Sephora" # working directory if on a Mac
my_working_dir_pc <- "C:\\Users\\rebec\\OneDrive\\Desktop\\MKTAnalytics\\Data\\Sephora" # if on a PC
myFile_products <- "products.csv"
myFile_reviews <- "reviews.csv"
myFile_authors <- "authors.csv"
sqldf::sqldf("
SELECT *
FROM products p INNER JOIN reviews r ON p.product_id = r.product_id
INNER JOIN authors a ON r.author_id = r.author_id
LIMIT 100
")
# import data
setwd(getwd())
products <- read.csv(myFile_products)
reviews <- read.csv(myFile_reviews)
authors <- read.csv(myFile_authors)
# don't show warnings while knitting
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(ggplot2)
library(sqldf)
# constants
my_working_dir_mac <- "~/Desktop/MKTAnalytics/Data/Sephora" # working directory if on a Mac
my_working_dir_pc <- "C:\\Users\\rebec\\OneDrive\\Desktop\\MKTAnalytics\\Data\\Sephora" # if on a PC
myFile_products <- "products.csv"
myFile_reviews <- "reviews.csv"
myFile_authors <- "authors.csv"
sqldf::sqldf("
SELECT *
FROM products p INNER JOIN reviews r ON p.product_id = r.product_id
INNER JOIN authors a ON r.author_id = r.author_id
LIMIT 100
")
# import data
setwd(getwd())
products <- read.csv(myFile_products)
reviews <- read.csv(myFile_reviews)
authors <- read.csv(myFile_authors)
# table row count and review count
# check to ensure they are the same
sqldf("
SELECT COUNT(review_id), COUNT(*), COUNT(DISTINCT review_id)
FROM reviews
")
# without "DISTINCT" it does not matter which
# column you use (previously review_id, now author_id)
# it shows the table row count.
# why is counting up DISTINCT authors < table row count?
sqldf("
SELECT COUNT(author_id), COUNT(DISTINCT author_id)
FROM reviews
")
sqldf("
SELECT rating, COUNT(review_id) AS NumReviews
FROM reviews
GROUP BY rating
ORDER BY rating
")
sqldf("
SELECT rating, COUNT(review_id) AS NumReviews
FROM reviews
GROUP BY rating
ORDER BY rating DESC
")
# convert to date data type, and from the date, calculate month and year
reviews$submission_date <- as.Date(reviews$submission_date, format = "%m/%d/%y")
reviews$ReviewDate <- format(reviews$submission_date, "%d")
reviews$ReviewMonthInt <- as.integer(format(reviews$submission_date, "%m"))
reviews$ReviewMonth <- format(reviews$submission_date, "%b")
reviews$ReviewYear <- format(reviews$submission_date, "%y")
sqldf("
SELECT ReviewMonth, COUNT(review_id) AS NumReviews
FROM reviews
GROUP BY ReviewMonth
ORDER BY ReviewMonthInt
")
sqldf("
SELECT ReviewMonth, COUNT(review_id) AS NumReviews
FROM reviews
WHERE ReviewYear = 21 OR ReviewMonthInt BETWEEN 2 AND 6
GROUP BY ReviewMonth
ORDER BY ReviewMonthInt
")
# r bar chart by identity
reviewsByMonth <- sqldf("
SELECT ReviewMonth, ReviewMonthInt, COUNT(review_id) AS Reviews
FROM  reviews
WHERE ReviewYear BETWEEN 15 AND 22
GROUP BY ReviewMonth, ReviewMonthInt
ORDER BY ReviewMonthInt
")
barEx <- ggplot(data = reviewsByMonth, aes(x = reorder(ReviewMonth, ReviewMonthInt), y = Reviews)) +
geom_bar(stat = "identity") +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
barEx
# same bar chart by count
barExC <- ggplot(data = reviews[reviews$ReviewYear > 14 & reviews$ReviewYear < 23,],
aes(x = reorder(ReviewMonth, ReviewMonthInt))) + geom_bar(stat = "count") +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
barExC
reviews$submission_date <- as.Date(reviews$submission_date, format = "%m/%d/%y")
reviews$ReviewDate <- format(reviews$submission_date, "%d")
reviews$ReviewMonthInt <- as.integer(format(reviews$submission_date, "%m"))
reviews$ReviewMonth <- format(reviews$submission_date, "%b")
reviews$ReviewYear <- format(reviews$submission_date, "%y")
reviewsByMonth <- sqldf("
SELECT ReviewMonth, ReviewMonthInt, COUNT(review_id) AS Reviews
FROM  reviews
WHERE ReviewYear BETWEEN 15 AND 22
GROUP BY ReviewMonth, ReviewMonthInt
ORDER BY ReviewMonthInt
")
barEx <- ggplot(data = reviewsByMonth, aes(x = reorder(ReviewMonth, ReviewMonthInt), y = Reviews)) +
geom_bar(stat = "identity") +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
hisEx <- ggplot(data = reviews, aes(rating)) +
geom_histogram(binwidth = .5) +
labs(title = "Luxury Brands Ratings Distribution", x = "Review Ratings (out of 5 Stars)", y = "# of Reviews")
library(gridExtra); library(grid)
grid.arrange(hisEx, barEx, nrow=1, ncol=2)
ggplot(data = products[is.na(products$rating) == FALSE,], aes(rating)) +
geom_histogram(binwidth = .1) +
labs(title = "Ratings Distribution of All Products", x = "Average Ratings (out of 5 Stars)", y = "# of Products")
#Discussion: possible next steps of analysis?
ggplot(data = products[is.na(products$price_usd) == FALSE,], aes(price_usd)) +
geom_histogram(binwidth = 5) +
labs(title = "Price Distribution of All Products", x = "Prices (USD)", y = "# of Products")
#Discussion: possible next steps of analysis?
# same bar chart by count
bar_PCategories <- ggplot(data = products,
aes(x = primary_category)) + geom_bar(stat = "count") +
labs(title = "Number of Products in Each Category on Sephora.com", x = "Primary Category", y = "# of Products")
bar_PCategories
ggplot(data = reviewsByMonth, aes(x = reorder(ReviewMonth, ReviewMonthInt), y = Reviews)) +
geom_bar(stat = "identity") + coord_flip() +
labs(title = "Luxury Brands Engagement by Month", x = "Review Month", y = "# of Reviews")
# before we plot the bar chart, we need to generate its input
# for each product, we need to do text processing to split the highlights column
# and correspond the results to the product id
# once we figure out how to do it for 1 product, we loop through the entire
# table and do this processing for all products
# create an empty table called "highlight_table"
# it has two columns, product id and a single highlight
# if a product has multiple highlights, say, 2, it will show up as 2 rows
# in this table
highlight_table <- data.frame(product_id = character(), highlight = character())
# product_id is column 1 in the products table
# highlights is column 21 in the products table
colProductId <- 1
colHighlights <- 21
for (i in 1:nrow(products)){
#for (i in 1:1) {
current_highlights <- products[i,colHighlights] #get the highlights from products
if(nchar(current_highlights) > 0){ #keep going only if highlights is not blank
current_product_id <- products[i,colProductId] #get the product id
current_highlights <- gsub("\\[|\\]|'", "", current_highlights)
#print(current_product_id)
#Split the input using the comma as a separator
current_highlights <- unlist(strsplit(current_highlights, ", "))
highlight_table <- rbind(highlight_table, data.frame(product_id = current_product_id, highlight = current_highlights))
}
}
# after we have created and populated the highlights table
# take a look and do some simple counts
# E.g, how many products have highlights? 6287
# and how many highlights are there?
sqldf("
SELECT COUNT(DISTINCT product_id) products, COUNT(DISTINCT highlight) highlights
FROM highlight_table
")
# now, let's merge the highlight_table with the products table
# and calculate the average by each highlight
skincareHighlightsPrices <- sqldf::sqldf("
SELECT h.highlight AS Highlight, AVG(price_usd) AS AvgPrice
FROM  highlight_table h INNER JOIN products p
ON    h.product_id = p.product_id
WHERE primary_category = 'Skincare'
GROUP BY h.highlight
HAVING COUNT(DISTINCT h.product_id) > 10
ORDER BY AVG(price_usd) DESC
LIMIT 50
")
# vertical bar chart
bar_HighlightPrices <- ggplot(data = skincareHighlightsPrices, aes(x = reorder(Highlight, AvgPrice), y = AvgPrice)) +
geom_bar(stat = "identity") + coord_flip() +
labs(title = "Top 50 Highlights of Skincare Products by Avg. Price", x = "Highlight", y = "Avg. Product Price")
#ggsave("bar_HighlightPrices.pdf") # saves the graph to a PDF file
bar_HighlightPrices
# now, let's merge the highlight_table with the products table
# and calculate the average by each highlight
skincareHighlightsRatings <- sqldf::sqldf("
SELECT h.highlight AS Highlight, AVG(rating) AS AvgRating
FROM  highlight_table h INNER JOIN products p
ON    h.product_id = p.product_id
WHERE primary_category = 'Skincare'
GROUP BY h.highlight
HAVING COUNT(DISTINCT h.product_id) > 10
ORDER BY AVG(rating) DESC
LIMIT 50
")
# vertical bar chart
bar_HighlightRatings <- ggplot(data = skincareHighlightsRatings, aes(x = reorder(Highlight, AvgRating), y = AvgRating)) +
geom_bar(stat = "identity") + coord_flip() +
labs(title = "Top 50 Highlights of Skincare Products by Avg. Rating", x = "Highlight", y = "Avg. Product Rating")
bar_HighlightRatings
